close all; clear all; clc;

%% import from 'labels_.csv'
M = importdata('labels_raw.csv');
T = M.textdata(2:end,:);
D = M.data;
n = size(T,1);

%% use <- only age and gender problems
use = ones(n,1);

%% fold
fold = str2num([T{:,1}]');

%% id_orig
% adience/faces/user_id/coarse_tilt_aligned_face.face_id.original_img.jpg
id_orig = cell(n,1);
for i = 1:n
    id_orig{i} = [ ...
        'adience/faces/', ...
        char(T(i,2)), ...
        '/coarse_tilt_aligned_face.', ...
        char(T(i,4)), ...
        '.', ...
        char(T(i,3)) ...
        ];
end
% imshow(id{4,:});

%% age
age_min = NaN(n,1);
age_max = NaN(n,1);
age_class_num = NaN(n,1);
get_age_class = @(x) ...
    0*(x<=2) + ...
    1*(3<=x & x<=7) + ...
    2*(8<=x & x<=13) + ...
    3*(14<=x & x<=20) + ...
    4*(21<=x & x<=35) + ...
    5*(36<=x & x<=45) + ...
    6*(46<=x & x<=59) + ...
    7*(60<=x) ...
;
c = 0;
for i = 1:n
    curr = T{i,5};
    if curr(1)=='('
        j = find(curr==',');
        age_min(i) = str2double(curr(2:j-1));
        age_max(i) = str2double(curr(j+2:end-1));
        age_class_num(i) = ...
            get_age_class((age_min(i)+age_max(i))/2);
    elseif ~isempty(str2num(curr))
        j = str2double(curr);
        age_min(i) = j;
        age_max(i) = j;
        age_class_num(i) = get_age_class(j);
    else
        age_min(i) = -1;
        age_max(i) = -1;
        age_class_num(i) = -1;
        use(i) = 0;
        c = c+1;
    end
end
age_class_mat = zeros(n,8);
for i = 1:8
    age_class_mat(:,i) = age_class_num==i-1;
end
age_class_mat(age_class_num==-1,:) = -1;

%% sex
sex_m = NaN(n,1);
sex_f = NaN(n,1);
for i = 1:n
    curr = T{i,6};
    if curr == 'm'
        sex_m(i) = 1;
        sex_f(i) = 0;
    elseif curr == 'f'
        sex_m(i) = 0;
        sex_f(i) = 1;
    elseif curr == 'u'
        sex_m(i) = 0.5;
        sex_f(i) = 0.5;
    else
        sex_m(i) = -1;
        sex_f(i) = -1;
        use(i) = 0;
    end
end

%% id = (string of index) + (.jpg)
id = [num2str((0:n-1)','%05d'), repmat('.jpg',n,1)];

%% box (haar) anticipation
box = repmat(-1, [n,3]);

%% assemble
A = table( ...
        id, ...
        use, ...
        fold, ...
        sex_m, ...
        sex_f, ...
        age_class_mat(:,1), ...
        age_class_mat(:,2), ...
        age_class_mat(:,3), ...
        age_class_mat(:,4), ...
        age_class_mat(:,5), ...
        age_class_mat(:,6), ...
        age_class_mat(:,7), ...
        age_class_mat(:,8), ...
        id_orig, ...
        box(:,1), box(:,2), box(:,3) ...
    );
A.Properties.VariableNames = { ...
        'id', ...
        'use', ...
        'fold', ...
        'sex_m', ...
        'sex_f', ...
        'age_class_0', ...
        'age_class_1', ...
        'age_class_2', ...
        'age_class_3', ...
        'age_class_4', ...
        'age_class_5', ...
        'age_class_6', ...
        'age_class_7' ...
        'id_orig', ...
        'box_x', 'box_y', 'box_s' ...
    };
%A(use==0,:) = [];

%% write
output_name = 'labels.csv';
writetable(A, output_name, 'delimiter',',');
disp(['output to: ', output_name]);


